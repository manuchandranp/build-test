name: Upload Artifact to JFrog Artifactory

# This defines the reusable workflow and its required inputs/secrets
on:
  workflow_call:
    inputs:
      jfrog-url:
        description: URL to JFrog platform (e.g., https://acme.jfrog.io)
        type: string
        required: true # Must be provided by the caller
      jfrog-repository:
        description: JFrog local repository to authenticate and publish (e.g., docker-local)
        type: string
        required: true
      workflow-artifact-name:
        description: Name of the artifact previously uploaded in the calling workflow (e.g., build-output)
        type: string
        required: true
      artifact-target-path:
        description: Target path within the artifact repository (e.g., packages/v1.0.0/)
        type: string
        required: true
      
      # Optional Inputs
      jfrog-build-name:
        description: JFrog build name
        type: string
        required: false
        default: ${{ github.repository }}
      jfrog-build-number:
        description: JFrog build number
        type: string
        required: false
        default: ${{ github.workflow }}-${{ github.run_number }}
      artifact-source-path:
        description: Local file system path to artifacts (relative to download)
        type: string
        required: false
        default: ./
      archive-artifact:
        description: Set to "zip" to deploy files inside a ZIP archive
        type: string
        required: false
        default: zip
        
    secrets:
      jfrog-access-token:
        description: Access token for JFrog platform authentication
        required: true
        
    outputs:
      artifact-path:
        description: Full path to uploaded artifact
        value: ${{ jobs.upload.outputs.artifact-path }}

jobs:
  upload:
    name: Upload '${{ inputs.workflow-artifact-name }}' to '${{ inputs.jfrog-repository }}'
    runs-on: ubuntu-latest
    
    # Define environment variables used in the script steps
    env:
      JFROG_ARTIFACT_PATH: ${{ inputs.jfrog-repository }}/${{ inputs.artifact-target-path }}
      JFROG_BUILD_NAME: ${{ inputs.jfrog-build-name }}
      JFROG_BUILD_NUMBER: ${{ inputs.jfrog-build-number }}
      ARTIFACT_SOURCE_PATH: ${{ inputs.artifact-source-path }}
      ARCHIVE_ARTIFACT: ${{ inputs.archive-artifact }}

    outputs:
      artifact-path: ${{ steps.set-job-outputs.outputs.artifact-path }}
      artifact-basename: ${{ steps.set-job-outputs.outputs.artifact-basename }}
      jfrog-build-name: ${{ steps.set-job-outputs.outputs.jfrog-build-name }}
      jfrog-build-number: ${{ steps.set-job-outputs.outputs.jfrog-build-number }}

    steps:
      - uses: actions/checkout@v5

      # 1. Download the artifact created in the calling workflow
      - name: Download Artifact
        uses: actions/download-artifact@v4
        id: download-artifact
        with:
          name: ${{ inputs.workflow-artifact-name }}
          path: temp/${{ inputs.workflow-artifact-name }}

      # 2. Setup JFrog CLI and authenticate using the inputs
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ inputs.jfrog-url }} # <-- JFrog URL is provided here
          JF_ACCESS_TOKEN: ${{ secrets.jfrog-access-token }}

      - name: Configure JFrog CLI Build Info
        run: |
          echo "JFROG_CLI_BUILD_NAME=$JFROG_BUILD_NAME" | tee --append "$GITHUB_ENV"
          echo "JFROG_CLI_BUILD_NUMBER=$JFROG_BUILD_NUMBER" | tee --append "$GITHUB_ENV"

      - name: Verify Artifactory is Accessible
        run: jf rt ping

      # 3. Upload the artifact
      - name: Upload to Artifactory Repository
        working-directory: ${{ steps.download-artifact.outputs.download-path }}
        run: |
          jf rt upload "$ARTIFACT_SOURCE_PATH" "$JFROG_ARTIFACT_PATH" --archive="$ARCHIVE_ARTIFACT" --detailed-summary --fail-no-op

      # 4. Set outputs for the job
      - name: Set Job Outputs
        id: set-job-outputs
        run: |
          echo "artifact-path=$JFROG_ARTIFACT_PATH" | tee --append "$GITHUB_OUTPUT"
          echo "artifact-basename=${JFROG_ARTIFACT_PATH##*/}" | tee --append "$GITHUB_OUTPUT"
          echo "branch-name=${GITHUB_HEAD_REF:-${GITHUB_REF_NAME}}" | tee --append "$GITHUB_OUTPUT"
          echo "jfrog-build-name=$JFROG_CLI_BUILD_NAME" | tee --append "$GITHUB_OUTPUT"
          echo "jfrog-build-number=$JFROG_CLI_BUILD_NUMBER" | tee --append "$GITHUB_OUTPUT"

      # 5. Publish Build Info
      - name: Publish Build Info and Set Properties
        env:
          BRANCH_NAME: ${{ steps.set-job-outputs.outputs.branch-name }}
        run: |
          jf rt build-add-git
          jf rt build-publish --detailed-summary
          jf rt set-props "$JFROG_ARTIFACT_PATH" "build.branch=$BRANCH_NAME"
